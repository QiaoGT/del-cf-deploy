name: 清理所有 Cloudflare Pages 项目

on:
  schedule:
    - cron: '*/10 * * * *'  # ⏱️ 每 10 分钟自动触发一次（UTC 时间）
  workflow_dispatch:         # ✅ 支持手动运行

jobs:
  precheck:
    name: 检查是否需要清理
    runs-on: ubuntu-latest
    outputs:
      should_cleanup: ${{ steps.check.outputs.should_cleanup }}
    steps:
      - name: 显示触发时间和方式
        run: |
          echo "📅 当前触发时间（UTC）: $(date -u)"
          echo "📢 触发来源: ${{ github.event_name }}"

      - name: 获取代码
        uses: actions/checkout@v4

      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 安装依赖
        run: npm install

      - name: 判断是否真的需要清理部署
        id: check
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          node scripts/check-need-cleanup.js > result.log
          if grep -q '"cleanup":true' result.log; then
            echo "✅ 有需要清理的部署。" && echo "should_cleanup=true" >> $GITHUB_OUTPUT
          else
            echo "🛑 没有部署需要清理。" && echo "should_cleanup=false" >> $GITHUB_OUTPUT
          fi

  cleanup:
    name: 执行清理任务
    needs: precheck
    if: needs.precheck.outputs.should_cleanup == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 显示清理阶段时间和来源
        run: |
          echo "📅 Cleanup 阶段触发时间（UTC）: $(date -u)"
          echo "📢 触发来源: ${{ github.event_name }}"

      - name: 获取代码
        uses: actions/checkout@v4

      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 安装依赖
        run: npm install

      - name: 执行清理脚本
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: node scripts/cleanup-deployments.js
